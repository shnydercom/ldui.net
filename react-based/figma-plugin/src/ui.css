body {
  font: 12px sans-serif;
  text-align: center;
  margin: 0;
}

#react-page {
  height: 100%;
}

#react-portal {
  position: absolute;
  display: flex;
  top: 37px;
  left: 32px;
  /* right: 0;
  bottom: 0;*/
  z-index: 100;
}

.main-layout {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.find-and-replace {
  background: #f3f3f3;
  padding: 6px 0;
  display: grid;
  height: 88px;
  grid-template-columns: 32px 1fr 32px;
  grid-template-rows: 32px 12px 32px;
  grid-column-gap: 0px;
  grid-row-gap: 0px;
}

.find-and-replace :nth-child(1) {
  grid-area: 1 / 1 / 2 / 2;
}

.find-and-replace :nth-child(2) {
  grid-area: 1 / 2 / 2 / 3;
}

.find-and-replace :nth-child(3) {
  grid-area: 1 / 3 / 2 / 4;
}

.find-and-replace :nth-child(4) {
  grid-area: 2 / 2 / 3 / 3;

  height: 12px;
  width: 100%;
}

.find-and-replace :nth-child(5) {
  grid-area: 3 / 1 / 4 / 2;
}

.find-and-replace :nth-child(6) {
  grid-area: 3 / 2 / 4 / 3;
}

.find-and-replace :nth-child(7) {
  grid-area: 3 / 3 / 4 / 4;
}

.ontology-results {
  flex: 1;
  overflow-y: hidden;
  display: flex;
  flex-direction: column;
}

.partial-search-results {
  height: 88px;
  padding: 0px 12px;
  box-shadow: rgb(230, 230, 230) 0px 1px 0px 0px;
  display: flex;
  flex-direction: column;
}

.partial-search-results--inner {
  margin: 12px 0px;
  display: flex;
  flex-direction: column;
}

.found-term {
  line-height: 20px;
}

.full-search-result {
  min-height: 88px;
  padding: 12px;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.full-search-result--inner {
  text-align: center;
  height: min-content;
}

.preview-search-result {
  height: 88px;
  padding: 12px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  box-shadow: rgb(230, 230, 230) 0px 1px 0px 0px;
}

.preview-search-result--inner {
  height: 40px;
  width: 80px;
  border: 2px solid #f3f3f3;
  border-radius: 8px;
}

.tooltip-bar {
  padding: 2px;
  font-size: 12px;
  background: #f3f3f3;
}

.hostcomp-list-scrollcontainer {
  height: fit-content;
  max-height: 280px;
  width: 190px;
  border: 1px solid var(--blue);
  outline: 1px solid var(--blue);
  outline-offset: -2px;
}

.hostcomp-list {
  display: flex;
  flex-direction: column;
  background: white;
}

.hostcomp-listentry {
  display: flex;
  flex-direction: row;
  height: 32px;
  align-items: center;
}

.hostcomp-listentry:hover {
  outline: 1px solid var(--blue);
}

.hostcomp-listentry:active {
  background-color: var(--color-bg-selected, #daebf7);
  border-color: transparent;
}

.hostcomp-listentry-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-right: 8px;
  user-select: none;
}

.icon--text:before {
  content: 'T';
}

.icon--vector:before {
  content: 'Vect';
}

.icon--rectangle:before {
  content: ' ';
  border: 1px solid grey;
  height: 8px;
  width: 12px;
}

.icon-reposition {
  background-position: 0;
  min-width: 32px;
  min-height: 32px;
}

.auto-complete .icon-reposition {
  position: absolute;
  top: -1px;
}

.auto-complete {
  position: relative;
}

.auto-complete .select-chevron {
  /* is only visible on hover/interaction: https://www.figma.com/file/Gj9iMcTbFbHrFq1ZWbDBuyc9/UI2%3A-Figma's-Design-System?node-id=0-7815&t=YI5bkIX9ugb7vepn-4*/
  display: none;
  position: absolute;
  top: 1px;
  right: 1px;
  height: 28px;
  width: 24px;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  border: 1px solid;
  border-left: none;
  border-color: rgb(245, 245, 245);
  color: var(--fg-select-chevron-hover);
  fill: var(--fg-select-chevron-hover);
  visibility: visible;
  background-color: var(--color-bg-hover, #e5e5e5);
}

.auto-complete #input-comp-name:hover + .select-chevron {
  display: flex;
  border-left: 1px solid rgb(245, 245, 245);

  background-color: white;
}
.auto-complete .select-chevron:hover {
  display: flex;
  background-color: rgb(245, 245, 245);
}

.auto-complete:hover #input-comp-name:not(:hover) {
  border: 1px solid var(--black1);
}

.auto-complete .select-chevron:active,
.auto-complete #input-comp-name:focus + .select-chevron {
  border-color: var(--blue);
  background-color: var(--blue);
  fill: white;
  color: white;
}

button:disabled,
button[disabled],
button[disabled]:hover,
button[disabled]:focus {
  border-color: transparent;
  outline-color: transparent;
  background: none;
  opacity: 0.3;
}

.input .icon {
  opacity: 1;
}
